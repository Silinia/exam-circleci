version: 2.1
orbs:
  node: circleci/node@5.1.0

# Définition des jobs (tâches unitaires)
jobs:
  #############################################
  # STAGE: BUILD
  #############################################
  
  # JOB: Installation des dépendances
  install_dependencies:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          cache-path: ~/project/node_modules
          cache-version: v1
      - run:
          name: "Vérification de la version de Node.js"
          command: echo "Vérification de la version Node: $(node --version)"
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  # JOB: Analyse de code
  code_analysis:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Exécution du linter"
          command: echo "Analyse du code avec ESLint"
      - run:
          name: "Vérification des types TypeScript"
          command: echo "Vérification des types TypeScript"

  # JOB: Cleaning et Packaging
  cleaning_packaging:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Nettoyage des fichiers temporaires"
          command: echo "Nettoyage des fichiers temporaires et non nécessaires"
      - run:
          name: "Build du projet Next.js"
          command: echo "Build du projet Next.js pour production"
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  #############################################
  # STAGE: TESTS
  #############################################
  
  # JOB: Tests unitaires
  unit_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Exécution des tests unitaires"
          command: echo "Exécution des tests unitaires avec Jest"
      - store_test_results:
          path: test-results

  # JOB: Tests d'intégration
  integration_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Exécution des tests d'intégration"
          command: echo "Exécution des tests d'intégration entre composants"

  # JOB: Tests de régression
  regression_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Exécution des tests de régression"
          command: echo "Vérification que les bugs corrigés ne réapparaissent pas"

  # JOB: Tests de performance
  performance_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Exécution des tests de performance"
          command: echo "Analyse des performances de l'application (Lighthouse, etc.)"

  # JOB: Tests de sécurité
  security_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Analyse des dépendances"
          command: echo "Analyse des vulnérabilités des dépendances npm"

  # JOB: Tests de compatibilité
  compatibility_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Tests de compatibilité navigateurs"
          command: echo "Vérification de la compatibilité sur différents navigateurs"

  # JOB: Tests d'accessibilité
  accessibility_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Tests d'accessibilité"
          command: echo "Vérification de la conformité aux normes WCAG"

  #############################################
  # STAGE: DEPLOY
  #############################################
  
  # JOB: Préparation de l'environnement de déploiement
  prepare_environment:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Configuration de l'environnement"
          command: echo "Préparation de l'environnement de déploiement"

  # JOB: Déploiement de l'application
  deploy_application:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Déploiement sur l'environnement cible"
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              echo "Déploiement sur l'environnement de PRODUCTION"
            elif [ "${CIRCLE_BRANCH}" == "integration" ]; then
              echo "Déploiement sur l'environnement d'INTEGRATION"
            elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
              echo "Déploiement sur l'environnement de DEVELOPMENT"
            fi

  # JOB: Tests de vérification
  verification_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Tests de vérification post-déploiement"
          command: echo "Vérification que l'application est correctement déployée"

  # JOB: Tests de validation fonctionnelle
  functional_validation:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Tests de validation fonctionnelle"
          command: echo "Validation des fonctionnalités principales en environnement déployé"

  # JOB: Tests de charge
  load_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Tests de charge"
          command: echo "Tests de charge pour vérifier la capacité de l'application sous stress"

  # JOB: Surveillance et suivi
  monitoring:
    executor: node/default
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: "Mise en place du monitoring"
          command: echo "Configuration de la surveillance et des alertes"

# Workflows (orchestration des jobs)
workflows:
  version: 2

  # Workflow principal qui gère tous les flux de travail en fonction des branches
  build_test_deploy:
    jobs:
      #############################################
      # STAGE: BUILD - Pour toutes les branches
      #############################################
      - install_dependencies
      
      - code_analysis:
          requires:
            - install_dependencies
      
      - cleaning_packaging:
          requires:
            - code_analysis
          filters:
            branches:
              # Éviter le build complet pour les branches feature
              not:
                - /^feature.*/

      #############################################
      # STAGE: TESTS - Filtres variés selon tests
      #############################################
      - unit_tests:
          requires:
            - install_dependencies
      
      - integration_tests:
          requires:
            - unit_tests
          filters:
            branches:
              # Important pour toutes les branches sauf features
              not:
                - /^feature.*/
      
      - regression_tests:
          requires:
            - unit_tests
          filters:
            branches:
              # Uniquement sur les branches principales et hotfix
              only:
                - develop
                - integration
                - main
                - /^hotfix.*/
      
      - performance_tests:
          requires:
            - unit_tests
          filters:
            branches:
              # Uniquement pour integration et production
              only:
                - integration
                - main
      
      - security_tests:
          requires:
            - integration_tests
          filters:
            branches:
              # Éviter sur les features pour gagner du temps
              not:
                - /^feature.*/
      
      - compatibility_tests:
          requires:
            - integration_tests
          filters:
            branches:
              # Uniquement en pré-production et production
              only:
                - integration
                - main
      
      - accessibility_tests:
          requires:
            - integration_tests
          filters:
            branches:
              # Uniquement en pré-production et production
              only:
                - integration
                - main

      #############################################
      # STAGE: DEPLOY - Filtres selon environnement
      #############################################
      - prepare_environment:
          requires:
            - cleaning_packaging
            - unit_tests
            - integration_tests
          filters:
            branches:
              # Uniquement pour les branches d'environnement
              only:
                - develop
                - integration
                - main
      
      - deploy_application:
          requires:
            - prepare_environment
          filters:
            branches:
              # Uniquement pour les branches d'environnement
              only:
                - develop
                - integration
                - main
      
      - verification_tests:
          requires:
            - deploy_application
          filters:
            branches:
              # Uniquement pour les branches d'environnement
              only:
                - develop
                - integration
                - main
      
      - functional_validation:
          requires:
            - verification_tests
          filters:
            branches:
              # Uniquement pour les branches d'environnement
              only:
                - develop
                - integration
                - main
      
      - load_tests:
          requires:
            - verification_tests
          filters:
            branches:
              # Tests de charge seulement pour integration et production
              only:
                - integration
                - main
      
      - monitoring:
          requires:
            - functional_validation
          filters:
            branches:
              # Monitoring pour tous les environnements
              only:
                - develop
                - integration
                - main