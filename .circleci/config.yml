version: 2.1
orbs:
  node: circleci/node@5

# Définition des jobs (tâches unitaires)
jobs:
  #############################################
  # STAGE: BUILD
  #############################################
  
  # JOB: Installation des dépendances
  install_dependencies:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Vérification de la version de Node.js
          command: echo "Version Node $(node --version)"
      - persist_to_workspace:
          root: .
          paths:
            - .

  # JOB: Analyse de code
  code_analysis:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Exécution du linter
          command: echo "Vérification de la qualité du code"
      - run:
          name: Vérification des types
          command: echo "Vérification des types TypeScript"

  # JOB: Cleaning et Packaging
  build_package:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Nettoyage des fichiers temporaires
          command: echo "Nettoyage des fichiers temporaires"
      - run:
          name: Build du projet
          command: echo "Build du projet Next.js"
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  #############################################
  # STAGE: TESTS
  #############################################
  
  # JOB: Tests unitaires
  unit_tests:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - attach_workspace:
          at: .
      - run:
          command: npm install jest-junit
      - run:
          name: Exécution des tests unitaires
          command: npm run test:ci
      - store_test_results:
          path: ./test-results/

  # JOB: Tests d'intégration
  integration_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Exécution des tests d'intégration
          command: echo "Tests d'intégration entre composants"

  # JOB: Tests de régression
  regression_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Exécution des tests de régression
          command: echo "Vérification des non-régressions"

  # JOB: Tests de performance
  performance_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Exécution des tests de performance
          command: echo "Tests de performance (lighthouse)"

  # JOB: Tests de sécurité
  security_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Analyse des vulnérabilités
          command: echo "Analyse des vulnérabilités"

  # JOB: Tests de compatibilité
  compatibility_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Tests de compatibilité navigateurs
          command: echo "Tests de compatibilité cross-browser"

  # JOB: Tests d'accessibilité
  accessibility_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Tests d'accessibilité
          command: echo "Vérification des normes d'accessibilité"

  #############################################
  # STAGE: DEPLOY
  #############################################
  
  # JOB: Préparation de l'environnement
  prepare_environment:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Préparation de l'environnement
          command: echo "Configuration de l'environnement cible"

  # JOB: Déploiement
  deploy_application:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Déploiement
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              echo "Déploiement en PRODUCTION"
            elif [ "${CIRCLE_BRANCH}" == "integration" ]; then
              echo "Déploiement en INTEGRATION"
            elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
              echo "Déploiement en DEVELOPMENT"
            fi

  # JOB: Vérification du déploiement
  verification_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Tests de vérification
          command: echo "Vérification post-déploiement"

  # JOB: Validation fonctionnelle
  functional_validation:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Validation fonctionnelle
          command: echo "Tests fonctionnels sur environnement déployé"

  # JOB: Tests de charge
  load_tests:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Tests de charge
          command: echo "Tests de performance sous charge"

  # JOB: Monitoring
  monitoring:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Mise en place du monitoring
          command: echo "Configuration du monitoring"

# Workflows (orchestration des jobs)
workflows:
  version: 2

  # Workflow principal de CI/CD
  build_test_deploy:
    jobs:
      # STAGE BUILD
      - install_dependencies
      
      - code_analysis:
          requires:
            - install_dependencies
      
      - build_package:
          requires:
            - code_analysis
          filters:
            branches:
              not:
                - /^feature.*/
      
      # STAGE TESTS
      - unit_tests:
          requires:
            - install_dependencies
      
      - integration_tests:
          requires:
            - unit_tests
          filters:
            branches:
              not:
                - /^feature.*/
      
      - regression_tests:
          requires:
            - unit_tests
          filters:
            branches:
              only:
                - develop
                - integration
                - main
                - /^hotfix.*/
      
      - performance_tests:
          requires:
            - integration_tests
          filters:
            branches:
              only:
                - integration
                - main
      
      - security_tests:
          requires:
            - integration_tests
          filters:
            branches:
              not:
                - /^feature.*/
      
      - compatibility_tests:
          requires:
            - integration_tests
          filters:
            branches:
              only:
                - integration
                - main
      
      - accessibility_tests:
          requires:
            - integration_tests
          filters:
            branches:
              only:
                - integration
                - main
      
      # STAGE DEPLOY
      - prepare_environment:
          requires:
            - build_package
            - unit_tests
          filters:
            branches:
              only:
                - develop
                - integration
                - main
      
      - deploy_application:
          requires:
            - prepare_environment
          filters:
            branches:
              only:
                - develop
                - integration
                - main
      
      - verification_tests:
          requires:
            - deploy_application
          filters:
            branches:
              only:
                - develop
                - integration
                - main
      
      - functional_validation:
          requires:
            - verification_tests
          filters:
            branches:
              only:
                - develop
                - integration
                - main
      
      - load_tests:
          requires:
            - verification_tests
          filters:
            branches:
              only:
                - integration
                - main
      
      - monitoring:
          requires:
            - functional_validation
          filters:
            branches:
              only:
                - develop
                - integration
                - main